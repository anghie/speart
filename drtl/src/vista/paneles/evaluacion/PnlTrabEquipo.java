/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.evaluacion;

import controlador.acciones.evaluaciones.ControladorEvaluacion;
import controlador.acciones.evaluaciones.ControladorTrabEquipo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import modelo.operaciones.TrabajoEquipo;

/**
 *
 * @author jenny
 */
public class PnlTrabEquipo extends javax.swing.JPanel {

    TrabajoEquipo te;
    private ControladorTrabEquipo cte;
    private GestorControladorTrabEquipo gcte;

    /**
     * Creates new form PnlTrabEquipo
     */
    public PnlTrabEquipo(TrabajoEquipo te) {
        initComponents();
        this.te = te;
        txtTrabEquip.setText(te.getDescripcionTrabEquipo());
        txtComObserv.setText(te.getAltaTrabEquipo());
        cte = new ControladorTrabEquipo(this);
        gcte = new GestorControladorTrabEquipo();
        cbFrecAplic.addActionListener(gcte);
        cbRelevancia.addActionListener(gcte);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtComObserv = new javax.swing.JTextField();
        cbRelevancia = new javax.swing.JComboBox();
        txtTrabEquip = new javax.swing.JTextField();
        cbFrecAplic = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(902, 33));
        setLayout(null);

        txtComObserv.setEditable(false);
        add(txtComObserv);
        txtComObserv.setBounds(300, 0, 440, 30);

        cbRelevancia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alta", "Media", "Baja" }));
        cbRelevancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRelevanciaActionPerformed(evt);
            }
        });
        add(cbRelevancia);
        cbRelevancia.setBounds(180, 0, 120, 30);

        txtTrabEquip.setEditable(false);
        add(txtTrabEquip);
        txtTrabEquip.setBounds(0, 0, 180, 30);

        cbFrecAplic.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Siempre", "Frecuentemente", "Alguna vez", "Rara vez", "Nunca" }));
        add(cbFrecAplic);
        cbFrecAplic.setBounds(740, 0, 160, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void cbRelevanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRelevanciaActionPerformed
        if (getCbRelevancia().getSelectedIndex() == 0) {
            getTxtComObserv().setText(te.getAltaTrabEquipo());
        } else if (getCbRelevancia().getSelectedIndex() == 1) {
            getTxtComObserv().setText(te.getMediaTrabEquipo());
        } else if (getCbRelevancia().getSelectedIndex() == 2) {
            getTxtComObserv().setText(te.getBajaTrabEquipo());
        }
    }//GEN-LAST:event_cbRelevanciaActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbFrecAplic;
    private javax.swing.JComboBox cbRelevancia;
    private javax.swing.JTextField txtComObserv;
    private javax.swing.JTextField txtTrabEquip;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the cbFrecAplic
     */
    public javax.swing.JComboBox getCbFrecAplic() {
        return cbFrecAplic;
    }

    /**
     * @return the cbRelevancia
     */
    public javax.swing.JComboBox getCbRelevancia() {
        return cbRelevancia;
    }

    /**
     * @return the txtComObserv
     */
    public javax.swing.JTextField getTxtComObserv() {
        return txtComObserv;
    }

    /**
     * @return the txtTrabEquip
     */
    public javax.swing.JTextField getTxtTrabEquip() {
        return txtTrabEquip;
    }

    class GestorControladorTrabEquipo implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == cbRelevancia) {
                cte.frecuenciaAplic(cbRelevancia.getSelectedIndex(), te);
            } else if (e.getSource() == cbFrecAplic) {
                if (ControladorEvaluacion.facTrabEquip > 0) {
                    cte.actualizaResTrabEquip();
                } else {
                    JOptionPane.showMessageDialog(null, "Debe llenar el campo de factor de Trabajo en equipo con valores mayores a cero");
                }
            }
        }
    }
}
