/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.paneles.servicios;

import controlador.acciones.servicios.ControladorRecordatorio;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import javax.swing.JOptionPane;
import modelo.recordatorio.Recordatorio;
import vista.modelo.Calendario;
import vista.modelo.Mensaje;

/**
 *
 * @author jenny
 */
public class DialogoCreaRecordatorio extends javax.swing.JDialog {

    private Calendar fecha;
    private Recordatorio record;
    private GestorControladorRecordatorio gcr;
    private ControladorRecordatorio cr;
    int indice;

//    public DialogoCreaRecordatorio(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
//        initComponents();
//        gcr = new GestorControladorRecordatorio();
//        cr = new ControladorRecordatorio(this);
//        poneAcciones();
//    }

    public DialogoCreaRecordatorio(java.awt.Frame parent, boolean modal, Calendar fecha) {
        super(parent, modal);
        initComponents();
        this.fecha = fecha;
        gcr = new GestorControladorRecordatorio();
        cr = new ControladorRecordatorio(this);
        poneFecha();
        poneAcciones();
    }

    private void poneFecha() {
        String fechita = Calendario.diasCalendario[fecha.get(Calendar.DAY_OF_WEEK) - 1]
                + " " + fecha.get(Calendar.DAY_OF_MONTH) + " de "
                + Calendario.mesesCalendario[fecha.get(Calendar.MONTH)].toLowerCase()
                + " del " + fecha.get(Calendar.YEAR);
        getTxtFecha().setText(fechita);
    }

    private void poneAcciones() {
        btnCancelar.addActionListener(gcr);
        btnGuardar.addActionListener(gcr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        scrollDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        lblDescripcion = new javax.swing.JLabel();
        lblEvento = new javax.swing.JLabel();
        txtEvento = new javax.swing.JTextField();
        lblHora = new javax.swing.JLabel();
        spHora = new javax.swing.JSpinner();
        LblSep = new javax.swing.JLabel();
        spMinuto = new javax.swing.JSpinner();
        lblRecordar = new javax.swing.JLabel();
        cbRecord = new javax.swing.JComboBox();
        txtFecha = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        btnGuardar.setText("Guardar");
        getContentPane().add(btnGuardar);
        btnGuardar.setBounds(130, 253, 110, 30);

        btnCancelar.setText("Cancelar");
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(250, 253, 110, 30);

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        scrollDescripcion.setViewportView(txtDescripcion);

        getContentPane().add(scrollDescripcion);
        scrollDescripcion.setBounds(20, 137, 460, 110);

        lblDescripcion.setText(" Descripcion:");
        getContentPane().add(lblDescripcion);
        lblDescripcion.setBounds(20, 110, 110, 30);

        lblEvento.setText(" Evento:");
        getContentPane().add(lblEvento);
        lblEvento.setBounds(20, 80, 70, 30);
        getContentPane().add(txtEvento);
        txtEvento.setBounds(90, 80, 390, 30);

        lblHora.setText("  Hora:");
        getContentPane().add(lblHora);
        lblHora.setBounds(20, 50, 90, 30);

        spHora.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        getContentPane().add(spHora);
        spHora.setBounds(90, 50, 50, 30);

        LblSep.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        LblSep.setText("  :");
        getContentPane().add(LblSep);
        LblSep.setBounds(140, 50, 20, 30);

        spMinuto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        getContentPane().add(spMinuto);
        spMinuto.setBounds(170, 50, 50, 30);

        lblRecordar.setText("Recordar:");
        getContentPane().add(lblRecordar);
        lblRecordar.setBounds(240, 53, 90, 30);

        cbRecord.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5 min antes", "10 min antes", "30 min antes", "1 hora antes" }));
        getContentPane().add(cbRecord);
        cbRecord.setBounds(310, 50, 170, 30);

        txtFecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(txtFecha);
        txtFecha.setBounds(90, 20, 390, 30);

        lblFecha.setText("Fecha :");
        getContentPane().add(lblFecha);
        lblFecha.setBounds(30, 20, 90, 30);

        setSize(new java.awt.Dimension(521, 326));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblSep;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cbRecord;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblEvento;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblRecordar;
    private javax.swing.JScrollPane scrollDescripcion;
    private javax.swing.JSpinner spHora;
    private javax.swing.JSpinner spMinuto;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtEvento;
    private javax.swing.JLabel txtFecha;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the spHora
     */
    public javax.swing.JSpinner getSpHora() {
        return spHora;
    }

    /**
     * @return the spMinuto
     */
    public javax.swing.JSpinner getSpMinuto() {
        return spMinuto;
    }

    /**
     * @return the txtDescripcion
     */
    public javax.swing.JTextArea getTxtDescripcion() {
        return txtDescripcion;
    }

    /**
     * @return the txtEvento
     */
    public javax.swing.JTextField getTxtEvento() {
        return txtEvento;
    }

    /**
     * @return the txtFecha
     */
    public javax.swing.JLabel getTxtFecha() {
        return txtFecha;
    }

    /**
     * @return the cbRecord
     */
    public javax.swing.JComboBox getCbRecord() {
        return cbRecord;
    }
    
    

    class GestorControladorRecordatorio implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == btnCancelar) {
                dispose();
            } else if (e.getSource() == btnGuardar) {
                if (!cr.hayVacios()) {
                    int n = JOptionPane.showConfirmDialog(null, "Â¿Desea guardar el recordatorio?", "Guardar", JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        cr.guardaRecordatorio();
                    }
                } else {
                    Mensaje.camposVacios();
                }

            }
        }
    }
}
